{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem-vindo \u00e0 Documenta\u00e7\u00e3o .NET Sobre esta Documenta\u00e7\u00e3o Esta documenta\u00e7\u00e3o foi criada para ajudar desenvolvedores a entenderem, configurarem e utilizarem a plataforma .NET em seus projetos. Se voc\u00ea \u00e9 novo no .NET ou um desenvolvedor experiente, encontrar\u00e1 informa\u00e7\u00f5es valiosas sobre como aproveitar ao m\u00e1ximo esta poderosa plataforma. O que \u00e9 .NET? .NET \u00e9 uma plataforma de desenvolvimento gratuita e de c\u00f3digo aberto, criada pela Microsoft, que suporta a constru\u00e7\u00e3o de diversos tipos de aplica\u00e7\u00f5es, desde aplicativos m\u00f3veis e web at\u00e9 sistemas de desktop e servi\u00e7os em nuvem. Para uma introdu\u00e7\u00e3o mais detalhada, visite a se\u00e7\u00e3o O que \u00e9 .NET? . Navega\u00e7\u00e3o pela Documenta\u00e7\u00e3o A documenta\u00e7\u00e3o est\u00e1 organizada em diferentes se\u00e7\u00f5es para facilitar o acesso \u00e0s informa\u00e7\u00f5es: Introdu\u00e7\u00e3o : Um ponto de partida para novos usu\u00e1rios, com informa\u00e7\u00f5es sobre o que \u00e9 .NET e a hist\u00f3ria da plataforma. Guia de Instala\u00e7\u00e3o : Instru\u00e7\u00f5es detalhadas sobre como instalar o .NET em diferentes sistemas operacionais, incluindo Windows , macOS , e Linux . Fundamentos do .NET : Conceitos essenciais para entender o funcionamento do .NET, como CLR, BCL e Assemblies. Desenvolvimento com .NET : Tutoriais e guias para come\u00e7ar a desenvolver com C#, ASP.NET Core, e outras tecnologias relacionadas. Recursos Avan\u00e7ados : Explora\u00e7\u00e3o de t\u00f3picos avan\u00e7ados como LINQ e Entity Framework, para desenvolvedores que querem aprofundar suas habilidades. Como Contribuir Esta documenta\u00e7\u00e3o \u00e9 um projeto em constante evolu\u00e7\u00e3o, e sua contribui\u00e7\u00e3o \u00e9 bem-vinda. Se voc\u00ea encontrar um erro ou desejar adicionar conte\u00fado, sinta-se \u00e0 vontade para abrir uma issue ou enviar um pull request no reposit\u00f3rio do GitHub. Come\u00e7ando com .NET Se voc\u00ea est\u00e1 pronto para come\u00e7ar, recomendamos visitar a se\u00e7\u00e3o de Instala\u00e7\u00e3o para configurar o ambiente de desenvolvimento no seu sistema operacional. Depois, explore os Fundamentos do .NET para entender os conceitos b\u00e1sicos antes de iniciar o desenvolvimento. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"In\u00edcio"},{"location":"#bem-vindo-a-documentacao-net","text":"","title":"Bem-vindo \u00e0 Documenta\u00e7\u00e3o .NET"},{"location":"#sobre-esta-documentacao","text":"Esta documenta\u00e7\u00e3o foi criada para ajudar desenvolvedores a entenderem, configurarem e utilizarem a plataforma .NET em seus projetos. Se voc\u00ea \u00e9 novo no .NET ou um desenvolvedor experiente, encontrar\u00e1 informa\u00e7\u00f5es valiosas sobre como aproveitar ao m\u00e1ximo esta poderosa plataforma.","title":"Sobre esta Documenta\u00e7\u00e3o"},{"location":"#o-que-e-net","text":".NET \u00e9 uma plataforma de desenvolvimento gratuita e de c\u00f3digo aberto, criada pela Microsoft, que suporta a constru\u00e7\u00e3o de diversos tipos de aplica\u00e7\u00f5es, desde aplicativos m\u00f3veis e web at\u00e9 sistemas de desktop e servi\u00e7os em nuvem. Para uma introdu\u00e7\u00e3o mais detalhada, visite a se\u00e7\u00e3o O que \u00e9 .NET? .","title":"O que \u00e9 .NET?"},{"location":"#navegacao-pela-documentacao","text":"A documenta\u00e7\u00e3o est\u00e1 organizada em diferentes se\u00e7\u00f5es para facilitar o acesso \u00e0s informa\u00e7\u00f5es: Introdu\u00e7\u00e3o : Um ponto de partida para novos usu\u00e1rios, com informa\u00e7\u00f5es sobre o que \u00e9 .NET e a hist\u00f3ria da plataforma. Guia de Instala\u00e7\u00e3o : Instru\u00e7\u00f5es detalhadas sobre como instalar o .NET em diferentes sistemas operacionais, incluindo Windows , macOS , e Linux . Fundamentos do .NET : Conceitos essenciais para entender o funcionamento do .NET, como CLR, BCL e Assemblies. Desenvolvimento com .NET : Tutoriais e guias para come\u00e7ar a desenvolver com C#, ASP.NET Core, e outras tecnologias relacionadas. Recursos Avan\u00e7ados : Explora\u00e7\u00e3o de t\u00f3picos avan\u00e7ados como LINQ e Entity Framework, para desenvolvedores que querem aprofundar suas habilidades.","title":"Navega\u00e7\u00e3o pela Documenta\u00e7\u00e3o"},{"location":"#como-contribuir","text":"Esta documenta\u00e7\u00e3o \u00e9 um projeto em constante evolu\u00e7\u00e3o, e sua contribui\u00e7\u00e3o \u00e9 bem-vinda. Se voc\u00ea encontrar um erro ou desejar adicionar conte\u00fado, sinta-se \u00e0 vontade para abrir uma issue ou enviar um pull request no reposit\u00f3rio do GitHub.","title":"Como Contribuir"},{"location":"#comecando-com-net","text":"Se voc\u00ea est\u00e1 pronto para come\u00e7ar, recomendamos visitar a se\u00e7\u00e3o de Instala\u00e7\u00e3o para configurar o ambiente de desenvolvimento no seu sistema operacional. Depois, explore os Fundamentos do .NET para entender os conceitos b\u00e1sicos antes de iniciar o desenvolvimento. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Come\u00e7ando com .NET"},{"location":"desenvolvimento/","text":"","title":"Desenvolvimento"},{"location":"introducao/","text":"O que \u00e9 .NET? .NET \u00e9 uma plataforma de desenvolvimento criada pela Microsoft que permite a constru\u00e7\u00e3o de uma vasta gama de aplica\u00e7\u00f5es, incluindo aplicativos web, de desktop, m\u00f3veis, jogos e muito mais. Lan\u00e7ado pela primeira vez no in\u00edcio dos anos 2000, o .NET evoluiu significativamente ao longo dos anos, tornando-se uma das plataformas de desenvolvimento mais robustas e vers\u00e1teis dispon\u00edveis atualmente. Principais Componentes do .NET A plataforma .NET \u00e9 composta por diversos componentes que funcionam em conjunto para fornecer um ambiente de desenvolvimento eficiente e poderoso: Common Language Runtime (CLR): O motor que executa as aplica\u00e7\u00f5es .NET. Ele gerencia a execu\u00e7\u00e3o de programas, incluindo coleta de lixo (garbage collection), controle de exce\u00e7\u00f5es e seguran\u00e7a. Base Class Library (BCL): Uma vasta cole\u00e7\u00e3o de classes reutiliz\u00e1veis que fornecem funcionalidades essenciais, como manipula\u00e7\u00e3o de arquivos, intera\u00e7\u00e3o com a rede, estruturas de dados, e muito mais. Linguagens de Programa\u00e7\u00e3o: O .NET suporta v\u00e1rias linguagens de programa\u00e7\u00e3o, sendo as mais populares o C#, F#, e Visual Basic. Ferramentas de Desenvolvimento: Como o Visual Studio, que oferece um ambiente integrado (IDE) robusto para desenvolvimento, depura\u00e7\u00e3o e publica\u00e7\u00e3o de aplica\u00e7\u00f5es .NET. Hist\u00f3ria do .NET Lan\u00e7amento e Primeiros Anos O .NET foi anunciado pela Microsoft em 2000 e lan\u00e7ado oficialmente em 2002 com a vers\u00e3o 1.0. Desde o in\u00edcio, foi projetado para ser uma plataforma que permitisse aos desenvolvedores construir aplica\u00e7\u00f5es que pudessem rodar em diferentes dispositivos e sistemas operacionais. A Evolu\u00e7\u00e3o do .NET Ao longo dos anos, o .NET passou por v\u00e1rias transforma\u00e7\u00f5es: .NET Framework: A vers\u00e3o original, que foi limitada ao ambiente Windows. Mono: Um projeto de c\u00f3digo aberto que trouxe o .NET para sistemas operacionais baseados em Unix, como Linux e macOS. .NET Core: Lan\u00e7ado em 2016, o .NET Core trouxe uma vers\u00e3o modular e multiplataforma do .NET, permitindo que aplica\u00e7\u00f5es rodassem em Windows, Linux e macOS de maneira consistente. .NET 5 e Al\u00e9m: Em 2020, a Microsoft unificou o .NET Framework e o .NET Core sob a marca .NET 5, removendo a confus\u00e3o entre as diferentes vers\u00f5es e oferecendo uma plataforma \u00fanica e moderna. Porque Escolher .NET? O .NET \u00e9 uma excelente escolha para desenvolvedores por v\u00e1rios motivos: Multiplataforma: Com o .NET, voc\u00ea pode criar aplica\u00e7\u00f5es que rodem em diferentes sistemas operacionais, como Windows, macOS e Linux. Amplo Suporte de Ferramentas: Ferramentas como o Visual Studio e Visual Studio Code oferecem suporte extensivo para o desenvolvimento com .NET, facilitando o processo de desenvolvimento. Performance e Escalabilidade: O .NET \u00e9 conhecido por sua alta performance, especialmente com o .NET Core e .NET 5/6, que s\u00e3o otimizados para rodar aplica\u00e7\u00f5es de alta performance em ambientes de produ\u00e7\u00e3o. Comunidade Ativa: A comunidade .NET \u00e9 grande e ativa, oferecendo suporte, bibliotecas de c\u00f3digo aberto, e uma vasta gama de recursos educacionais. Come\u00e7ando com .NET Se voc\u00ea est\u00e1 pronto para come\u00e7ar a desenvolver com .NET, o primeiro passo \u00e9 configurar o ambiente de desenvolvimento. Siga o Guia de Instala\u00e7\u00e3o para configurar o .NET em sua m\u00e1quina. Ap\u00f3s a instala\u00e7\u00e3o, voc\u00ea pode come\u00e7ar a explorar as Fundamentos do .NET para entender melhor como a plataforma funciona. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Introdu\u00e7\u00e3o"},{"location":"introducao/#o-que-e-net","text":".NET \u00e9 uma plataforma de desenvolvimento criada pela Microsoft que permite a constru\u00e7\u00e3o de uma vasta gama de aplica\u00e7\u00f5es, incluindo aplicativos web, de desktop, m\u00f3veis, jogos e muito mais. Lan\u00e7ado pela primeira vez no in\u00edcio dos anos 2000, o .NET evoluiu significativamente ao longo dos anos, tornando-se uma das plataformas de desenvolvimento mais robustas e vers\u00e1teis dispon\u00edveis atualmente.","title":"O que \u00e9 .NET?"},{"location":"introducao/#principais-componentes-do-net","text":"A plataforma .NET \u00e9 composta por diversos componentes que funcionam em conjunto para fornecer um ambiente de desenvolvimento eficiente e poderoso: Common Language Runtime (CLR): O motor que executa as aplica\u00e7\u00f5es .NET. Ele gerencia a execu\u00e7\u00e3o de programas, incluindo coleta de lixo (garbage collection), controle de exce\u00e7\u00f5es e seguran\u00e7a. Base Class Library (BCL): Uma vasta cole\u00e7\u00e3o de classes reutiliz\u00e1veis que fornecem funcionalidades essenciais, como manipula\u00e7\u00e3o de arquivos, intera\u00e7\u00e3o com a rede, estruturas de dados, e muito mais. Linguagens de Programa\u00e7\u00e3o: O .NET suporta v\u00e1rias linguagens de programa\u00e7\u00e3o, sendo as mais populares o C#, F#, e Visual Basic. Ferramentas de Desenvolvimento: Como o Visual Studio, que oferece um ambiente integrado (IDE) robusto para desenvolvimento, depura\u00e7\u00e3o e publica\u00e7\u00e3o de aplica\u00e7\u00f5es .NET.","title":"Principais Componentes do .NET"},{"location":"introducao/#historia-do-net","text":"","title":"Hist\u00f3ria do .NET"},{"location":"introducao/#lancamento-e-primeiros-anos","text":"O .NET foi anunciado pela Microsoft em 2000 e lan\u00e7ado oficialmente em 2002 com a vers\u00e3o 1.0. Desde o in\u00edcio, foi projetado para ser uma plataforma que permitisse aos desenvolvedores construir aplica\u00e7\u00f5es que pudessem rodar em diferentes dispositivos e sistemas operacionais.","title":"Lan\u00e7amento e Primeiros Anos"},{"location":"introducao/#a-evolucao-do-net","text":"Ao longo dos anos, o .NET passou por v\u00e1rias transforma\u00e7\u00f5es: .NET Framework: A vers\u00e3o original, que foi limitada ao ambiente Windows. Mono: Um projeto de c\u00f3digo aberto que trouxe o .NET para sistemas operacionais baseados em Unix, como Linux e macOS. .NET Core: Lan\u00e7ado em 2016, o .NET Core trouxe uma vers\u00e3o modular e multiplataforma do .NET, permitindo que aplica\u00e7\u00f5es rodassem em Windows, Linux e macOS de maneira consistente. .NET 5 e Al\u00e9m: Em 2020, a Microsoft unificou o .NET Framework e o .NET Core sob a marca .NET 5, removendo a confus\u00e3o entre as diferentes vers\u00f5es e oferecendo uma plataforma \u00fanica e moderna.","title":"A Evolu\u00e7\u00e3o do .NET"},{"location":"introducao/#porque-escolher-net","text":"O .NET \u00e9 uma excelente escolha para desenvolvedores por v\u00e1rios motivos: Multiplataforma: Com o .NET, voc\u00ea pode criar aplica\u00e7\u00f5es que rodem em diferentes sistemas operacionais, como Windows, macOS e Linux. Amplo Suporte de Ferramentas: Ferramentas como o Visual Studio e Visual Studio Code oferecem suporte extensivo para o desenvolvimento com .NET, facilitando o processo de desenvolvimento. Performance e Escalabilidade: O .NET \u00e9 conhecido por sua alta performance, especialmente com o .NET Core e .NET 5/6, que s\u00e3o otimizados para rodar aplica\u00e7\u00f5es de alta performance em ambientes de produ\u00e7\u00e3o. Comunidade Ativa: A comunidade .NET \u00e9 grande e ativa, oferecendo suporte, bibliotecas de c\u00f3digo aberto, e uma vasta gama de recursos educacionais.","title":"Porque Escolher .NET?"},{"location":"introducao/#comecando-com-net","text":"Se voc\u00ea est\u00e1 pronto para come\u00e7ar a desenvolver com .NET, o primeiro passo \u00e9 configurar o ambiente de desenvolvimento. Siga o Guia de Instala\u00e7\u00e3o para configurar o .NET em sua m\u00e1quina. Ap\u00f3s a instala\u00e7\u00e3o, voc\u00ea pode come\u00e7ar a explorar as Fundamentos do .NET para entender melhor como a plataforma funciona. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Come\u00e7ando com .NET"},{"location":"avancado/base/","text":"Recursos Avan\u00e7ados do .NET Bem-vindo \u00e0 se\u00e7\u00e3o de Recursos Avan\u00e7ados da documenta\u00e7\u00e3o do .NET. Esta \u00e1rea \u00e9 dedicada a desenvolvedores que j\u00e1 possuem uma compreens\u00e3o s\u00f3lida dos conceitos b\u00e1sicos e est\u00e3o prontos para explorar t\u00f3picos mais complexos e poderosos do .NET. Nesta se\u00e7\u00e3o, voc\u00ea encontrar\u00e1 informa\u00e7\u00f5es detalhadas sobre: LINQ (Language Integrated Query) : LINQ \u00e9 uma poderosa ferramenta que permite escrever consultas de forma integrada no c\u00f3digo C# ou VB.NET, facilitando o trabalho com dados. Entity Framework : O Entity Framework \u00e9 um ORM (Object-Relational Mapper) que simplifica o acesso e a manipula\u00e7\u00e3o de dados em aplica\u00e7\u00f5es .NET, eliminando a necessidade de escrever SQL manualmente. Por que Explorar Recursos Avan\u00e7ados? Dominar os recursos avan\u00e7ados do .NET permite que voc\u00ea: Escreva c\u00f3digo mais eficiente e expressivo. Gerencie dados de forma mais eficaz. Aumente a produtividade ao lidar com opera\u00e7\u00f5es complexas. Utilize todo o potencial da plataforma .NET para construir aplica\u00e7\u00f5es robustas e escal\u00e1veis. Como Usar esta Se\u00e7\u00e3o Voc\u00ea pode navegar diretamente para os t\u00f3picos de seu interesse: Se voc\u00ea deseja aprender a escrever consultas poderosas e eficientes, comece com LINQ . Se o seu foco \u00e9 simplificar o acesso a dados em suas aplica\u00e7\u00f5es, explore o Entity Framework . Cada se\u00e7\u00e3o cont\u00e9m exemplos pr\u00e1ticos, melhores pr\u00e1ticas e dicas para ajud\u00e1-lo a aproveitar ao m\u00e1ximo essas ferramentas avan\u00e7adas. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Recursos Avan\u00e7ados do .NET"},{"location":"avancado/base/#recursos-avancados-do-net","text":"Bem-vindo \u00e0 se\u00e7\u00e3o de Recursos Avan\u00e7ados da documenta\u00e7\u00e3o do .NET. Esta \u00e1rea \u00e9 dedicada a desenvolvedores que j\u00e1 possuem uma compreens\u00e3o s\u00f3lida dos conceitos b\u00e1sicos e est\u00e3o prontos para explorar t\u00f3picos mais complexos e poderosos do .NET. Nesta se\u00e7\u00e3o, voc\u00ea encontrar\u00e1 informa\u00e7\u00f5es detalhadas sobre: LINQ (Language Integrated Query) : LINQ \u00e9 uma poderosa ferramenta que permite escrever consultas de forma integrada no c\u00f3digo C# ou VB.NET, facilitando o trabalho com dados. Entity Framework : O Entity Framework \u00e9 um ORM (Object-Relational Mapper) que simplifica o acesso e a manipula\u00e7\u00e3o de dados em aplica\u00e7\u00f5es .NET, eliminando a necessidade de escrever SQL manualmente.","title":"Recursos Avan\u00e7ados do .NET"},{"location":"avancado/base/#por-que-explorar-recursos-avancados","text":"Dominar os recursos avan\u00e7ados do .NET permite que voc\u00ea: Escreva c\u00f3digo mais eficiente e expressivo. Gerencie dados de forma mais eficaz. Aumente a produtividade ao lidar com opera\u00e7\u00f5es complexas. Utilize todo o potencial da plataforma .NET para construir aplica\u00e7\u00f5es robustas e escal\u00e1veis.","title":"Por que Explorar Recursos Avan\u00e7ados?"},{"location":"avancado/base/#como-usar-esta-secao","text":"Voc\u00ea pode navegar diretamente para os t\u00f3picos de seu interesse: Se voc\u00ea deseja aprender a escrever consultas poderosas e eficientes, comece com LINQ . Se o seu foco \u00e9 simplificar o acesso a dados em suas aplica\u00e7\u00f5es, explore o Entity Framework . Cada se\u00e7\u00e3o cont\u00e9m exemplos pr\u00e1ticos, melhores pr\u00e1ticas e dicas para ajud\u00e1-lo a aproveitar ao m\u00e1ximo essas ferramentas avan\u00e7adas. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Como Usar esta Se\u00e7\u00e3o"},{"location":"avancado/entity-framework/","text":"Entity Framework Entity Framework (EF) \u00e9 um ORM (Object-Relational Mapper) para .NET que permite aos desenvolvedores trabalhar com um banco de dados usando objetos .NET, eliminando a necessidade de grande parte do c\u00f3digo SQL manual. O EF simplifica o acesso a dados em aplicativos .NET. Principais Recursos do Entity Framework Modelo de Dados Baseado em Objetos: O EF permite que voc\u00ea trabalhe com dados como objetos .NET, sem a necessidade de escrever SQL diretamente. Suporte a M\u00faltiplos Bancos de Dados: Funciona com SQL Server, SQLite, PostgreSQL, MySQL, entre outros. Migrations: Migrations gerencia mudan\u00e7as no esquema do banco de dados de maneira segura e autom\u00e1tica. Usando Entity Framework Configurando o Contexto O ponto central do EF \u00e9 o DbContext , que \u00e9 a ponte entre a aplica\u00e7\u00e3o .NET e o banco de dados: ```csharp public class MeuContexto : DbContext { public DbSet Produtos { get; set; } protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { optionsBuilder.UseSqlServer(@\"Server=meu_servidor;Database=minha_base_de_dados;Trusted_Connection=True;\"); } }","title":"Entity Framework"},{"location":"avancado/entity-framework/#entity-framework","text":"Entity Framework (EF) \u00e9 um ORM (Object-Relational Mapper) para .NET que permite aos desenvolvedores trabalhar com um banco de dados usando objetos .NET, eliminando a necessidade de grande parte do c\u00f3digo SQL manual. O EF simplifica o acesso a dados em aplicativos .NET.","title":"Entity Framework"},{"location":"avancado/entity-framework/#principais-recursos-do-entity-framework","text":"Modelo de Dados Baseado em Objetos: O EF permite que voc\u00ea trabalhe com dados como objetos .NET, sem a necessidade de escrever SQL diretamente. Suporte a M\u00faltiplos Bancos de Dados: Funciona com SQL Server, SQLite, PostgreSQL, MySQL, entre outros. Migrations: Migrations gerencia mudan\u00e7as no esquema do banco de dados de maneira segura e autom\u00e1tica.","title":"Principais Recursos do Entity Framework"},{"location":"avancado/entity-framework/#usando-entity-framework","text":"","title":"Usando Entity Framework"},{"location":"avancado/entity-framework/#configurando-o-contexto","text":"O ponto central do EF \u00e9 o DbContext , que \u00e9 a ponte entre a aplica\u00e7\u00e3o .NET e o banco de dados: ```csharp public class MeuContexto : DbContext { public DbSet Produtos { get; set; } protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { optionsBuilder.UseSqlServer(@\"Server=meu_servidor;Database=minha_base_de_dados;Trusted_Connection=True;\"); } }","title":"Configurando o Contexto"},{"location":"avancado/linq/","text":"LINQ (Language Integrated Query) LINQ (Language Integrated Query) \u00e9 uma tecnologia poderosa e flex\u00edvel introduzida no .NET para trabalhar com dados. Ele permite que os desenvolvedores escrevam consultas diretamente no c\u00f3digo, usando uma sintaxe familiar de C# ou VB.NET, e \u00e9 integrado diretamente ao sistema de tipos do .NET. Por que usar LINQ? Consist\u00eancia: LINQ oferece uma sintaxe uniforme para acessar diferentes tipos de dados, como cole\u00e7\u00f5es, bancos de dados, XML, entre outros. Legibilidade: Consultas LINQ s\u00e3o expressivas e mais f\u00e1ceis de entender em compara\u00e7\u00e3o a consultas SQL embutidas em strings. Seguran\u00e7a de Tipo: Como as consultas LINQ s\u00e3o verificadas em tempo de compila\u00e7\u00e3o, os erros s\u00e3o capturados mais cedo. Exemplos de LINQ Consultando Cole\u00e7\u00f5es Vamos come\u00e7ar com um exemplo b\u00e1sico de como consultar uma cole\u00e7\u00e3o em mem\u00f3ria:","title":"LINQ (Language Integrated Query)"},{"location":"avancado/linq/#linq-language-integrated-query","text":"LINQ (Language Integrated Query) \u00e9 uma tecnologia poderosa e flex\u00edvel introduzida no .NET para trabalhar com dados. Ele permite que os desenvolvedores escrevam consultas diretamente no c\u00f3digo, usando uma sintaxe familiar de C# ou VB.NET, e \u00e9 integrado diretamente ao sistema de tipos do .NET.","title":"LINQ (Language Integrated Query)"},{"location":"avancado/linq/#por-que-usar-linq","text":"Consist\u00eancia: LINQ oferece uma sintaxe uniforme para acessar diferentes tipos de dados, como cole\u00e7\u00f5es, bancos de dados, XML, entre outros. Legibilidade: Consultas LINQ s\u00e3o expressivas e mais f\u00e1ceis de entender em compara\u00e7\u00e3o a consultas SQL embutidas em strings. Seguran\u00e7a de Tipo: Como as consultas LINQ s\u00e3o verificadas em tempo de compila\u00e7\u00e3o, os erros s\u00e3o capturados mais cedo.","title":"Por que usar LINQ?"},{"location":"avancado/linq/#exemplos-de-linq","text":"","title":"Exemplos de LINQ"},{"location":"avancado/linq/#consultando-colecoes","text":"Vamos come\u00e7ar com um exemplo b\u00e1sico de como consultar uma cole\u00e7\u00e3o em mem\u00f3ria:","title":"Consultando Cole\u00e7\u00f5es"},{"location":"desenvolvimento/aspnet-core/","text":"Desenvolvimento com ASP.NET Core ASP.NET Core \u00e9 um framework de c\u00f3digo aberto, multiplataforma, desenvolvido pela Microsoft, para a constru\u00e7\u00e3o de aplica\u00e7\u00f5es web modernas, incluindo servi\u00e7os RESTful, aplica\u00e7\u00f5es web e APIs. \u00c9 conhecido por sua alta performance, flexibilidade e facilidade de uso. O que \u00e9 ASP.NET Core? ASP.NET Core \u00e9 uma reescrita completa do ASP.NET tradicional, com foco em performance e modularidade. Ele foi projetado para ser executado no .NET Core, mas tamb\u00e9m \u00e9 compat\u00edvel com o .NET Framework. ASP.NET Core \u00e9 ideal para criar aplica\u00e7\u00f5es web modernas que podem ser implantadas em v\u00e1rias plataformas, como Windows, macOS, e Linux. Principais Recursos do ASP.NET Core Multiplataforma: Execute suas aplica\u00e7\u00f5es em Windows, macOS e Linux. Alta Performance: ASP.NET Core \u00e9 otimizado para alta performance, com benchmarks que o colocam entre os frameworks web mais r\u00e1pidos dispon\u00edveis. Arquitetura Modular: Utilize apenas os pacotes e middlewares necess\u00e1rios para sua aplica\u00e7\u00e3o, mantendo-a leve e eficiente. Inje\u00e7\u00e3o de Depend\u00eancia: ASP.NET Core tem suporte nativo para inje\u00e7\u00e3o de depend\u00eancia, facilitando a cria\u00e7\u00e3o de aplica\u00e7\u00f5es escal\u00e1veis e test\u00e1veis. Suporte para MVC e Razor Pages: Escolha entre MVC para aplica\u00e7\u00f5es baseadas em padr\u00f5es ou Razor Pages para uma abordagem mais simples e eficiente. Criando uma Aplica\u00e7\u00e3o ASP.NET Core Aqui est\u00e1 um exemplo b\u00e1sico de como criar uma nova aplica\u00e7\u00e3o ASP.NET Core usando a CLI do .NET: ```bash dotnet new webapp -n MinhaAplicacao cd MinhaAplicacao dotnet run","title":"Desenvolvimento com ASP.NET Core"},{"location":"desenvolvimento/aspnet-core/#desenvolvimento-com-aspnet-core","text":"ASP.NET Core \u00e9 um framework de c\u00f3digo aberto, multiplataforma, desenvolvido pela Microsoft, para a constru\u00e7\u00e3o de aplica\u00e7\u00f5es web modernas, incluindo servi\u00e7os RESTful, aplica\u00e7\u00f5es web e APIs. \u00c9 conhecido por sua alta performance, flexibilidade e facilidade de uso.","title":"Desenvolvimento com ASP.NET Core"},{"location":"desenvolvimento/aspnet-core/#o-que-e-aspnet-core","text":"ASP.NET Core \u00e9 uma reescrita completa do ASP.NET tradicional, com foco em performance e modularidade. Ele foi projetado para ser executado no .NET Core, mas tamb\u00e9m \u00e9 compat\u00edvel com o .NET Framework. ASP.NET Core \u00e9 ideal para criar aplica\u00e7\u00f5es web modernas que podem ser implantadas em v\u00e1rias plataformas, como Windows, macOS, e Linux.","title":"O que \u00e9 ASP.NET Core?"},{"location":"desenvolvimento/aspnet-core/#principais-recursos-do-aspnet-core","text":"Multiplataforma: Execute suas aplica\u00e7\u00f5es em Windows, macOS e Linux. Alta Performance: ASP.NET Core \u00e9 otimizado para alta performance, com benchmarks que o colocam entre os frameworks web mais r\u00e1pidos dispon\u00edveis. Arquitetura Modular: Utilize apenas os pacotes e middlewares necess\u00e1rios para sua aplica\u00e7\u00e3o, mantendo-a leve e eficiente. Inje\u00e7\u00e3o de Depend\u00eancia: ASP.NET Core tem suporte nativo para inje\u00e7\u00e3o de depend\u00eancia, facilitando a cria\u00e7\u00e3o de aplica\u00e7\u00f5es escal\u00e1veis e test\u00e1veis. Suporte para MVC e Razor Pages: Escolha entre MVC para aplica\u00e7\u00f5es baseadas em padr\u00f5es ou Razor Pages para uma abordagem mais simples e eficiente.","title":"Principais Recursos do ASP.NET Core"},{"location":"desenvolvimento/aspnet-core/#criando-uma-aplicacao-aspnet-core","text":"Aqui est\u00e1 um exemplo b\u00e1sico de como criar uma nova aplica\u00e7\u00e3o ASP.NET Core usando a CLI do .NET: ```bash dotnet new webapp -n MinhaAplicacao cd MinhaAplicacao dotnet run","title":"Criando uma Aplica\u00e7\u00e3o ASP.NET Core"},{"location":"desenvolvimento/base/","text":"Desenvolvimento com .NET Bem-vindo \u00e0 se\u00e7\u00e3o de Desenvolvimento com .NET! Esta \u00e1rea da documenta\u00e7\u00e3o \u00e9 dedicada a fornecer guias e exemplos pr\u00e1ticos para ajudar voc\u00ea a come\u00e7ar a programar em C# e a construir aplica\u00e7\u00f5es web robustas com ASP.NET Core. Nesta se\u00e7\u00e3o, voc\u00ea encontrar\u00e1 informa\u00e7\u00f5es sobre: Desenvolvimento com C# : Aprenda os fundamentos da linguagem C#, uma linguagem moderna, orientada a objetos e fortemente tipada, que \u00e9 amplamente utilizada para o desenvolvimento de aplica\u00e7\u00f5es .NET. Desenvolvimento com ASP.NET Core : Descubra como criar aplica\u00e7\u00f5es web e APIs utilizando ASP.NET Core, um framework multiplataforma e de alto desempenho. Por que Aprender Desenvolvimento com .NET? O .NET \u00e9 uma plataforma poderosa e flex\u00edvel, utilizada para construir uma ampla variedade de aplica\u00e7\u00f5es, desde software de desktop at\u00e9 servi\u00e7os web e aplica\u00e7\u00f5es m\u00f3veis. Dominar as ferramentas de desenvolvimento com .NET, como C# e ASP.NET Core, abre um vasto leque de oportunidades e permite que voc\u00ea crie solu\u00e7\u00f5es robustas, escal\u00e1veis e seguras. Benef\u00edcios de Usar C# e ASP.NET Core C# \u00e9 uma linguagem vers\u00e1til que combina a simplicidade de linguagens modernas com a efici\u00eancia de linguagens de baixo n\u00edvel. Ela \u00e9 ideal para o desenvolvimento de aplica\u00e7\u00f5es que precisam ser r\u00e1pidas, seguras e f\u00e1ceis de manter. ASP.NET Core \u00e9 um framework que facilita a cria\u00e7\u00e3o de aplica\u00e7\u00f5es web de alta performance. Ele \u00e9 flex\u00edvel, modular e pode ser executado em v\u00e1rias plataformas, incluindo Windows, macOS e Linux. Navegue pelos T\u00f3picos Para come\u00e7ar, escolha o t\u00f3pico que deseja explorar: Desenvolvimento com C# : Inicie sua jornada aprendendo a linguagem C# e aplicando seus conceitos fundamentais. Desenvolvimento com ASP.NET Core : Mergulhe na constru\u00e7\u00e3o de aplica\u00e7\u00f5es web modernas com o framework ASP.NET Core. Cada uma dessas se\u00e7\u00f5es oferece uma combina\u00e7\u00e3o de conceitos te\u00f3ricos e exemplos pr\u00e1ticos, ajudando voc\u00ea a aplicar imediatamente o que aprendeu. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Desenvolvimento com .NET"},{"location":"desenvolvimento/base/#desenvolvimento-com-net","text":"Bem-vindo \u00e0 se\u00e7\u00e3o de Desenvolvimento com .NET! Esta \u00e1rea da documenta\u00e7\u00e3o \u00e9 dedicada a fornecer guias e exemplos pr\u00e1ticos para ajudar voc\u00ea a come\u00e7ar a programar em C# e a construir aplica\u00e7\u00f5es web robustas com ASP.NET Core. Nesta se\u00e7\u00e3o, voc\u00ea encontrar\u00e1 informa\u00e7\u00f5es sobre: Desenvolvimento com C# : Aprenda os fundamentos da linguagem C#, uma linguagem moderna, orientada a objetos e fortemente tipada, que \u00e9 amplamente utilizada para o desenvolvimento de aplica\u00e7\u00f5es .NET. Desenvolvimento com ASP.NET Core : Descubra como criar aplica\u00e7\u00f5es web e APIs utilizando ASP.NET Core, um framework multiplataforma e de alto desempenho.","title":"Desenvolvimento com .NET"},{"location":"desenvolvimento/base/#por-que-aprender-desenvolvimento-com-net","text":"O .NET \u00e9 uma plataforma poderosa e flex\u00edvel, utilizada para construir uma ampla variedade de aplica\u00e7\u00f5es, desde software de desktop at\u00e9 servi\u00e7os web e aplica\u00e7\u00f5es m\u00f3veis. Dominar as ferramentas de desenvolvimento com .NET, como C# e ASP.NET Core, abre um vasto leque de oportunidades e permite que voc\u00ea crie solu\u00e7\u00f5es robustas, escal\u00e1veis e seguras.","title":"Por que Aprender Desenvolvimento com .NET?"},{"location":"desenvolvimento/base/#beneficios-de-usar-c-e-aspnet-core","text":"C# \u00e9 uma linguagem vers\u00e1til que combina a simplicidade de linguagens modernas com a efici\u00eancia de linguagens de baixo n\u00edvel. Ela \u00e9 ideal para o desenvolvimento de aplica\u00e7\u00f5es que precisam ser r\u00e1pidas, seguras e f\u00e1ceis de manter. ASP.NET Core \u00e9 um framework que facilita a cria\u00e7\u00e3o de aplica\u00e7\u00f5es web de alta performance. Ele \u00e9 flex\u00edvel, modular e pode ser executado em v\u00e1rias plataformas, incluindo Windows, macOS e Linux.","title":"Benef\u00edcios de Usar C# e ASP.NET Core"},{"location":"desenvolvimento/base/#navegue-pelos-topicos","text":"Para come\u00e7ar, escolha o t\u00f3pico que deseja explorar: Desenvolvimento com C# : Inicie sua jornada aprendendo a linguagem C# e aplicando seus conceitos fundamentais. Desenvolvimento com ASP.NET Core : Mergulhe na constru\u00e7\u00e3o de aplica\u00e7\u00f5es web modernas com o framework ASP.NET Core. Cada uma dessas se\u00e7\u00f5es oferece uma combina\u00e7\u00e3o de conceitos te\u00f3ricos e exemplos pr\u00e1ticos, ajudando voc\u00ea a aplicar imediatamente o que aprendeu. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Navegue pelos T\u00f3picos"},{"location":"desenvolvimento/csharp/","text":"Desenvolvimento com C-sharp C# (pronuncia-se \"C-sharp\") \u00e9 uma linguagem de programa\u00e7\u00e3o moderna, orientada a objetos e fortemente tipada, criada pela Microsoft como parte da plataforma .NET. Desde o seu lan\u00e7amento, C# se tornou uma das linguagens mais populares para o desenvolvimento de uma ampla gama de aplica\u00e7\u00f5es, incluindo web, desktop, mobile e jogos. Principais Caracter\u00edsticas do C-sharp Orienta\u00e7\u00e3o a Objetos: C# suporta todos os conceitos de programa\u00e7\u00e3o orientada a objetos, como heran\u00e7a, encapsulamento e polimorfismo. Seguran\u00e7a de Tipo: C# \u00e9 uma linguagem fortemente tipada, o que significa que tipos de dados s\u00e3o verificados em tempo de compila\u00e7\u00e3o, ajudando a evitar erros comuns. LINQ (Language Integrated Query): C# inclui suporte integrado para consultas de dados diretamente na linguagem, atrav\u00e9s do LINQ. Assincronismo: C# suporta programa\u00e7\u00e3o ass\u00edncrona nativamente, facilitando a escrita de c\u00f3digo eficiente e escal\u00e1vel para opera\u00e7\u00f5es I/O. Interoperabilidade: C# permite a integra\u00e7\u00e3o com c\u00f3digo nativo e outras linguagens de programa\u00e7\u00e3o, facilitando a interoperabilidade com bibliotecas existentes. Estrutura de um Programa em C Aqui est\u00e1 um exemplo b\u00e1sico de um programa em C#:","title":"Desenvolvimento com C-sharp"},{"location":"desenvolvimento/csharp/#desenvolvimento-com-c-sharp","text":"C# (pronuncia-se \"C-sharp\") \u00e9 uma linguagem de programa\u00e7\u00e3o moderna, orientada a objetos e fortemente tipada, criada pela Microsoft como parte da plataforma .NET. Desde o seu lan\u00e7amento, C# se tornou uma das linguagens mais populares para o desenvolvimento de uma ampla gama de aplica\u00e7\u00f5es, incluindo web, desktop, mobile e jogos.","title":"Desenvolvimento com C-sharp"},{"location":"desenvolvimento/csharp/#principais-caracteristicas-do-c-sharp","text":"Orienta\u00e7\u00e3o a Objetos: C# suporta todos os conceitos de programa\u00e7\u00e3o orientada a objetos, como heran\u00e7a, encapsulamento e polimorfismo. Seguran\u00e7a de Tipo: C# \u00e9 uma linguagem fortemente tipada, o que significa que tipos de dados s\u00e3o verificados em tempo de compila\u00e7\u00e3o, ajudando a evitar erros comuns. LINQ (Language Integrated Query): C# inclui suporte integrado para consultas de dados diretamente na linguagem, atrav\u00e9s do LINQ. Assincronismo: C# suporta programa\u00e7\u00e3o ass\u00edncrona nativamente, facilitando a escrita de c\u00f3digo eficiente e escal\u00e1vel para opera\u00e7\u00f5es I/O. Interoperabilidade: C# permite a integra\u00e7\u00e3o com c\u00f3digo nativo e outras linguagens de programa\u00e7\u00e3o, facilitando a interoperabilidade com bibliotecas existentes.","title":"Principais Caracter\u00edsticas do C-sharp"},{"location":"desenvolvimento/csharp/#estrutura-de-um-programa-em-c","text":"Aqui est\u00e1 um exemplo b\u00e1sico de um programa em C#:","title":"Estrutura de um Programa em C"},{"location":"fundamentos/assemblies/","text":"Assemblies Assemblies s\u00e3o os blocos de constru\u00e7\u00e3o fundamentais de uma aplica\u00e7\u00e3o .NET. Eles cont\u00eam o c\u00f3digo compilado (IL - Intermediate Language), bem como metadados e recursos, como imagens ou textos, necess\u00e1rios para a execu\u00e7\u00e3o do programa. O que \u00e9 um Assembly? Um assembly pode ser um arquivo .dll (biblioteca de link din\u00e2mico) ou um arquivo .exe (execut\u00e1vel). Ele inclui todos os metadados necess\u00e1rios para que o .NET identifique e carregue corretamente os tipos contidos nele. Tipos de Assemblies Existem dois tipos principais de assemblies: Assemblies Privados: Utilizados exclusivamente por uma aplica\u00e7\u00e3o. Eles s\u00e3o implantados junto com a aplica\u00e7\u00e3o e n\u00e3o podem ser compartilhados com outras aplica\u00e7\u00f5es. Assemblies Compartilhados: Instalados no GAC (Global Assembly Cache) e podem ser compartilhados por v\u00e1rias aplica\u00e7\u00f5es. Estrutura de um Assembly Cada assembly cont\u00e9m: Manifesto: Cont\u00e9m metadados sobre o assembly, incluindo informa\u00e7\u00f5es sobre vers\u00f5es, cultura e refer\u00eancias a outros assemblies. Metadados de Tipo: Cont\u00eam defini\u00e7\u00f5es de todos os tipos (classes, interfaces, etc.) inclu\u00eddos no assembly. C\u00f3digo IL: O c\u00f3digo intermedi\u00e1rio que ser\u00e1 compilado em tempo de execu\u00e7\u00e3o pelo CLR. Recursos: Dados como imagens, arquivos de texto, e outros recursos necess\u00e1rios para a aplica\u00e7\u00e3o. Vantagens do Uso de Assemblies Modularidade: Assemblies permitem dividir o c\u00f3digo em m\u00f3dulos, facilitando a manuten\u00e7\u00e3o e a reutiliza\u00e7\u00e3o. Versionamento: O manifesto do assembly permite versionamento, garantindo que as aplica\u00e7\u00f5es utilizem a vers\u00e3o correta das bibliotecas. Distribui\u00e7\u00e3o Simplificada: Assemblies podem ser facilmente distribu\u00eddos e instalados, especialmente os assemblies compartilhados atrav\u00e9s do GAC. Criando e Usando Assemblies Aqui est\u00e1 um exemplo b\u00e1sico de como criar e usar assemblies no .NET: Criando um Assembly ```bash csc /target:library /out:MeuAssembly.dll MeuCodigo.cs","title":"Assemblies"},{"location":"fundamentos/assemblies/#assemblies","text":"Assemblies s\u00e3o os blocos de constru\u00e7\u00e3o fundamentais de uma aplica\u00e7\u00e3o .NET. Eles cont\u00eam o c\u00f3digo compilado (IL - Intermediate Language), bem como metadados e recursos, como imagens ou textos, necess\u00e1rios para a execu\u00e7\u00e3o do programa.","title":"Assemblies"},{"location":"fundamentos/assemblies/#o-que-e-um-assembly","text":"Um assembly pode ser um arquivo .dll (biblioteca de link din\u00e2mico) ou um arquivo .exe (execut\u00e1vel). Ele inclui todos os metadados necess\u00e1rios para que o .NET identifique e carregue corretamente os tipos contidos nele.","title":"O que \u00e9 um Assembly?"},{"location":"fundamentos/assemblies/#tipos-de-assemblies","text":"Existem dois tipos principais de assemblies: Assemblies Privados: Utilizados exclusivamente por uma aplica\u00e7\u00e3o. Eles s\u00e3o implantados junto com a aplica\u00e7\u00e3o e n\u00e3o podem ser compartilhados com outras aplica\u00e7\u00f5es. Assemblies Compartilhados: Instalados no GAC (Global Assembly Cache) e podem ser compartilhados por v\u00e1rias aplica\u00e7\u00f5es.","title":"Tipos de Assemblies"},{"location":"fundamentos/assemblies/#estrutura-de-um-assembly","text":"Cada assembly cont\u00e9m: Manifesto: Cont\u00e9m metadados sobre o assembly, incluindo informa\u00e7\u00f5es sobre vers\u00f5es, cultura e refer\u00eancias a outros assemblies. Metadados de Tipo: Cont\u00eam defini\u00e7\u00f5es de todos os tipos (classes, interfaces, etc.) inclu\u00eddos no assembly. C\u00f3digo IL: O c\u00f3digo intermedi\u00e1rio que ser\u00e1 compilado em tempo de execu\u00e7\u00e3o pelo CLR. Recursos: Dados como imagens, arquivos de texto, e outros recursos necess\u00e1rios para a aplica\u00e7\u00e3o.","title":"Estrutura de um Assembly"},{"location":"fundamentos/assemblies/#vantagens-do-uso-de-assemblies","text":"Modularidade: Assemblies permitem dividir o c\u00f3digo em m\u00f3dulos, facilitando a manuten\u00e7\u00e3o e a reutiliza\u00e7\u00e3o. Versionamento: O manifesto do assembly permite versionamento, garantindo que as aplica\u00e7\u00f5es utilizem a vers\u00e3o correta das bibliotecas. Distribui\u00e7\u00e3o Simplificada: Assemblies podem ser facilmente distribu\u00eddos e instalados, especialmente os assemblies compartilhados atrav\u00e9s do GAC.","title":"Vantagens do Uso de Assemblies"},{"location":"fundamentos/assemblies/#criando-e-usando-assemblies","text":"Aqui est\u00e1 um exemplo b\u00e1sico de como criar e usar assemblies no .NET:","title":"Criando e Usando Assemblies"},{"location":"fundamentos/assemblies/#criando-um-assembly","text":"```bash csc /target:library /out:MeuAssembly.dll MeuCodigo.cs","title":"Criando um Assembly"},{"location":"fundamentos/base/","text":"Fundamentos do .NET A se\u00e7\u00e3o de Fundamentos do .NET \u00e9 dedicada a explicar os conceitos essenciais que formam a base da plataforma .NET. Estes conceitos s\u00e3o cruciais para entender como o .NET funciona e para tirar o m\u00e1ximo proveito das suas capacidades. O que s\u00e3o os Fundamentos do .NET? Os Fundamentos do .NET incluem os componentes e tecnologias que formam a espinha dorsal da plataforma. Compreender esses fundamentos permitir\u00e1 que voc\u00ea desenvolva aplica\u00e7\u00f5es mais eficazes e otimize seu c\u00f3digo para melhor desempenho e manuten\u00e7\u00e3o. Nesta se\u00e7\u00e3o, voc\u00ea encontrar\u00e1 explica\u00e7\u00f5es detalhadas sobre: CLR (Common Language Runtime) : O CLR \u00e9 o motor que executa aplica\u00e7\u00f5es .NET, gerenciando mem\u00f3ria, execu\u00e7\u00e3o de c\u00f3digo e seguran\u00e7a. BCL (Base Class Library) : A BCL \u00e9 uma cole\u00e7\u00e3o abrangente de classes reutiliz\u00e1veis que fornecem funcionalidades essenciais, como manipula\u00e7\u00e3o de strings, I/O, e muito mais. Assemblies : Assemblies s\u00e3o os blocos de constru\u00e7\u00e3o das aplica\u00e7\u00f5es .NET, contendo c\u00f3digo execut\u00e1vel, recursos, e informa\u00e7\u00f5es sobre tipos. Por que os Fundamentos s\u00e3o Importantes? Compreender os fundamentos do .NET \u00e9 essencial para qualquer desenvolvedor que deseja: Otimizar a performance das aplica\u00e7\u00f5es, aproveitando ao m\u00e1ximo o gerenciamento de mem\u00f3ria e execu\u00e7\u00e3o oferecidos pelo CLR. Reutilizar c\u00f3digo de maneira eficiente, utilizando a BCL e entendendo a estrutura dos assemblies. Manter e escalar aplica\u00e7\u00f5es de forma mais eficaz, conhecendo os detalhes de como o .NET organiza e executa o c\u00f3digo. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Fundamentos do .NET"},{"location":"fundamentos/base/#fundamentos-do-net","text":"A se\u00e7\u00e3o de Fundamentos do .NET \u00e9 dedicada a explicar os conceitos essenciais que formam a base da plataforma .NET. Estes conceitos s\u00e3o cruciais para entender como o .NET funciona e para tirar o m\u00e1ximo proveito das suas capacidades.","title":"Fundamentos do .NET"},{"location":"fundamentos/base/#o-que-sao-os-fundamentos-do-net","text":"Os Fundamentos do .NET incluem os componentes e tecnologias que formam a espinha dorsal da plataforma. Compreender esses fundamentos permitir\u00e1 que voc\u00ea desenvolva aplica\u00e7\u00f5es mais eficazes e otimize seu c\u00f3digo para melhor desempenho e manuten\u00e7\u00e3o. Nesta se\u00e7\u00e3o, voc\u00ea encontrar\u00e1 explica\u00e7\u00f5es detalhadas sobre: CLR (Common Language Runtime) : O CLR \u00e9 o motor que executa aplica\u00e7\u00f5es .NET, gerenciando mem\u00f3ria, execu\u00e7\u00e3o de c\u00f3digo e seguran\u00e7a. BCL (Base Class Library) : A BCL \u00e9 uma cole\u00e7\u00e3o abrangente de classes reutiliz\u00e1veis que fornecem funcionalidades essenciais, como manipula\u00e7\u00e3o de strings, I/O, e muito mais. Assemblies : Assemblies s\u00e3o os blocos de constru\u00e7\u00e3o das aplica\u00e7\u00f5es .NET, contendo c\u00f3digo execut\u00e1vel, recursos, e informa\u00e7\u00f5es sobre tipos.","title":"O que s\u00e3o os Fundamentos do .NET?"},{"location":"fundamentos/base/#por-que-os-fundamentos-sao-importantes","text":"Compreender os fundamentos do .NET \u00e9 essencial para qualquer desenvolvedor que deseja: Otimizar a performance das aplica\u00e7\u00f5es, aproveitando ao m\u00e1ximo o gerenciamento de mem\u00f3ria e execu\u00e7\u00e3o oferecidos pelo CLR. Reutilizar c\u00f3digo de maneira eficiente, utilizando a BCL e entendendo a estrutura dos assemblies. Manter e escalar aplica\u00e7\u00f5es de forma mais eficaz, conhecendo os detalhes de como o .NET organiza e executa o c\u00f3digo. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Por que os Fundamentos s\u00e3o Importantes?"},{"location":"fundamentos/bcl/","text":"Base Class Library (BCL) A Base Class Library (BCL) \u00e9 um conjunto fundamental de bibliotecas que formam o n\u00facleo das APIs do .NET. Ela fornece uma vasta gama de funcionalidades essenciais, desde manipula\u00e7\u00e3o de strings e cole\u00e7\u00f5es at\u00e9 opera\u00e7\u00f5es de entrada/sa\u00edda e acesso a dados. Principais Componentes da BCL A BCL \u00e9 composta por v\u00e1rias classes e namespaces que cobrem as necessidades mais comuns de desenvolvimento: System: Inclui classes b\u00e1sicas, como String , DateTime , Math , e muitas outras, que s\u00e3o amplamente usadas em qualquer aplica\u00e7\u00e3o .NET. System.Collections: Fornece classes para manipula\u00e7\u00e3o de cole\u00e7\u00f5es de dados, como listas, filas, pilhas, dicion\u00e1rios, entre outros. System.IO: Inclui classes para trabalhar com arquivos e fluxos de dados, como File , Stream , e FileInfo . System.Net: Fornece classes para comunica\u00e7\u00e3o em rede, como HttpClient , WebRequest , e Sockets . System.Data: Oferece suporte para acesso a bancos de dados e manipula\u00e7\u00e3o de dados com ADO.NET. Por que a BCL \u00e9 Importante? A BCL \u00e9 essencial para o desenvolvimento em .NET porque: Produtividade: Ela fornece classes reutiliz\u00e1veis que facilitam o desenvolvimento r\u00e1pido, reduzindo a necessidade de escrever c\u00f3digo do zero para opera\u00e7\u00f5es comuns. Consist\u00eancia: Como a BCL \u00e9 parte integrante do .NET, ela oferece uma API consistente e bem documentada, garantindo que o c\u00f3digo seja leg\u00edvel e manten\u00edvel. Portabilidade: O c\u00f3digo que utiliza a BCL pode ser executado em qualquer ambiente que suporte o .NET, garantindo a portabilidade das aplica\u00e7\u00f5es. Explorando a BCL Aqui est\u00e3o alguns exemplos de como voc\u00ea pode utilizar a BCL: Manipula\u00e7\u00e3o de Strings ```csharp string frase = \"Hello, World!\"; string maiusculo = frase.ToUpper(); Console.WriteLine(maiusculo);","title":"Base Class Library (BCL)"},{"location":"fundamentos/bcl/#base-class-library-bcl","text":"A Base Class Library (BCL) \u00e9 um conjunto fundamental de bibliotecas que formam o n\u00facleo das APIs do .NET. Ela fornece uma vasta gama de funcionalidades essenciais, desde manipula\u00e7\u00e3o de strings e cole\u00e7\u00f5es at\u00e9 opera\u00e7\u00f5es de entrada/sa\u00edda e acesso a dados.","title":"Base Class Library (BCL)"},{"location":"fundamentos/bcl/#principais-componentes-da-bcl","text":"A BCL \u00e9 composta por v\u00e1rias classes e namespaces que cobrem as necessidades mais comuns de desenvolvimento: System: Inclui classes b\u00e1sicas, como String , DateTime , Math , e muitas outras, que s\u00e3o amplamente usadas em qualquer aplica\u00e7\u00e3o .NET. System.Collections: Fornece classes para manipula\u00e7\u00e3o de cole\u00e7\u00f5es de dados, como listas, filas, pilhas, dicion\u00e1rios, entre outros. System.IO: Inclui classes para trabalhar com arquivos e fluxos de dados, como File , Stream , e FileInfo . System.Net: Fornece classes para comunica\u00e7\u00e3o em rede, como HttpClient , WebRequest , e Sockets . System.Data: Oferece suporte para acesso a bancos de dados e manipula\u00e7\u00e3o de dados com ADO.NET.","title":"Principais Componentes da BCL"},{"location":"fundamentos/bcl/#por-que-a-bcl-e-importante","text":"A BCL \u00e9 essencial para o desenvolvimento em .NET porque: Produtividade: Ela fornece classes reutiliz\u00e1veis que facilitam o desenvolvimento r\u00e1pido, reduzindo a necessidade de escrever c\u00f3digo do zero para opera\u00e7\u00f5es comuns. Consist\u00eancia: Como a BCL \u00e9 parte integrante do .NET, ela oferece uma API consistente e bem documentada, garantindo que o c\u00f3digo seja leg\u00edvel e manten\u00edvel. Portabilidade: O c\u00f3digo que utiliza a BCL pode ser executado em qualquer ambiente que suporte o .NET, garantindo a portabilidade das aplica\u00e7\u00f5es.","title":"Por que a BCL \u00e9 Importante?"},{"location":"fundamentos/bcl/#explorando-a-bcl","text":"Aqui est\u00e3o alguns exemplos de como voc\u00ea pode utilizar a BCL:","title":"Explorando a BCL"},{"location":"fundamentos/bcl/#manipulacao-de-strings","text":"```csharp string frase = \"Hello, World!\"; string maiusculo = frase.ToUpper(); Console.WriteLine(maiusculo);","title":"Manipula\u00e7\u00e3o de Strings"},{"location":"fundamentos/clr/","text":"Common Language Runtime (CLR) O Common Language Runtime (CLR) \u00e9 o motor de execu\u00e7\u00e3o do .NET. Ele \u00e9 respons\u00e1vel por gerenciar a execu\u00e7\u00e3o do c\u00f3digo .NET, desde a aloca\u00e7\u00e3o de mem\u00f3ria e execu\u00e7\u00e3o de threads at\u00e9 a coleta de lixo e a aplica\u00e7\u00e3o de pol\u00edticas de seguran\u00e7a. Principais Responsabilidades do CLR O CLR desempenha v\u00e1rias fun\u00e7\u00f5es cruciais: Gerenciamento de Mem\u00f3ria: O CLR aloca e desaloca mem\u00f3ria automaticamente para objetos, utilizando um processo conhecido como garbage collection . Isso ajuda a evitar problemas comuns como vazamentos de mem\u00f3ria. Execu\u00e7\u00e3o de C\u00f3digo: O CLR compila o c\u00f3digo intermedi\u00e1rio (IL) em c\u00f3digo de m\u00e1quina espec\u00edfico para a plataforma, utilizando o compilador JIT (Just-In-Time). Seguran\u00e7a de Tipo: O CLR verifica a seguran\u00e7a de tipo em tempo de execu\u00e7\u00e3o, garantindo que o c\u00f3digo seja seguro para execu\u00e7\u00e3o. Gerenciamento de Exce\u00e7\u00f5es: O CLR oferece um modelo unificado para o tratamento de exce\u00e7\u00f5es, que pode ser usado por qualquer linguagem que utilize a plataforma .NET. Interoperabilidade: O CLR facilita a interoperabilidade entre o c\u00f3digo gerenciado pelo .NET e o c\u00f3digo n\u00e3o gerenciado, permitindo que aplica\u00e7\u00f5es .NET interajam com componentes COM e APIs nativas. Como o CLR Funciona? Quando voc\u00ea compila um programa .NET, o c\u00f3digo-fonte \u00e9 transformado em Intermediate Language (IL), um c\u00f3digo de baixo n\u00edvel que \u00e9 independente da plataforma. Quando o programa \u00e9 executado, o CLR compila o IL em c\u00f3digo de m\u00e1quina espec\u00edfico da plataforma atrav\u00e9s do compilador JIT. Esse processo garante que o c\u00f3digo seja otimizado para a plataforma onde est\u00e1 sendo executado. Vantagens de Usar o CLR Portabilidade: Como o CLR gerencia a execu\u00e7\u00e3o do c\u00f3digo, a mesma aplica\u00e7\u00e3o pode ser executada em diferentes plataformas sem modifica\u00e7\u00f5es. Seguran\u00e7a: O CLR inclui recursos avan\u00e7ados de seguran\u00e7a que ajudam a proteger as aplica\u00e7\u00f5es contra ataques. Produtividade: Com o gerenciamento de mem\u00f3ria e a coleta de lixo automatizados, os desenvolvedores podem focar em escrever c\u00f3digo, sem se preocupar com a aloca\u00e7\u00e3o e libera\u00e7\u00e3o de mem\u00f3ria manualmente. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Common Language Runtime (CLR)"},{"location":"fundamentos/clr/#common-language-runtime-clr","text":"O Common Language Runtime (CLR) \u00e9 o motor de execu\u00e7\u00e3o do .NET. Ele \u00e9 respons\u00e1vel por gerenciar a execu\u00e7\u00e3o do c\u00f3digo .NET, desde a aloca\u00e7\u00e3o de mem\u00f3ria e execu\u00e7\u00e3o de threads at\u00e9 a coleta de lixo e a aplica\u00e7\u00e3o de pol\u00edticas de seguran\u00e7a.","title":"Common Language Runtime (CLR)"},{"location":"fundamentos/clr/#principais-responsabilidades-do-clr","text":"O CLR desempenha v\u00e1rias fun\u00e7\u00f5es cruciais: Gerenciamento de Mem\u00f3ria: O CLR aloca e desaloca mem\u00f3ria automaticamente para objetos, utilizando um processo conhecido como garbage collection . Isso ajuda a evitar problemas comuns como vazamentos de mem\u00f3ria. Execu\u00e7\u00e3o de C\u00f3digo: O CLR compila o c\u00f3digo intermedi\u00e1rio (IL) em c\u00f3digo de m\u00e1quina espec\u00edfico para a plataforma, utilizando o compilador JIT (Just-In-Time). Seguran\u00e7a de Tipo: O CLR verifica a seguran\u00e7a de tipo em tempo de execu\u00e7\u00e3o, garantindo que o c\u00f3digo seja seguro para execu\u00e7\u00e3o. Gerenciamento de Exce\u00e7\u00f5es: O CLR oferece um modelo unificado para o tratamento de exce\u00e7\u00f5es, que pode ser usado por qualquer linguagem que utilize a plataforma .NET. Interoperabilidade: O CLR facilita a interoperabilidade entre o c\u00f3digo gerenciado pelo .NET e o c\u00f3digo n\u00e3o gerenciado, permitindo que aplica\u00e7\u00f5es .NET interajam com componentes COM e APIs nativas.","title":"Principais Responsabilidades do CLR"},{"location":"fundamentos/clr/#como-o-clr-funciona","text":"Quando voc\u00ea compila um programa .NET, o c\u00f3digo-fonte \u00e9 transformado em Intermediate Language (IL), um c\u00f3digo de baixo n\u00edvel que \u00e9 independente da plataforma. Quando o programa \u00e9 executado, o CLR compila o IL em c\u00f3digo de m\u00e1quina espec\u00edfico da plataforma atrav\u00e9s do compilador JIT. Esse processo garante que o c\u00f3digo seja otimizado para a plataforma onde est\u00e1 sendo executado.","title":"Como o CLR Funciona?"},{"location":"fundamentos/clr/#vantagens-de-usar-o-clr","text":"Portabilidade: Como o CLR gerencia a execu\u00e7\u00e3o do c\u00f3digo, a mesma aplica\u00e7\u00e3o pode ser executada em diferentes plataformas sem modifica\u00e7\u00f5es. Seguran\u00e7a: O CLR inclui recursos avan\u00e7ados de seguran\u00e7a que ajudam a proteger as aplica\u00e7\u00f5es contra ataques. Produtividade: Com o gerenciamento de mem\u00f3ria e a coleta de lixo automatizados, os desenvolvedores podem focar em escrever c\u00f3digo, sem se preocupar com a aloca\u00e7\u00e3o e libera\u00e7\u00e3o de mem\u00f3ria manualmente. \u00a9 2024 Documenta\u00e7\u00e3o .NET. Criado com MkDocs .","title":"Vantagens de Usar o CLR"},{"location":"instalacao/base/","text":"Guia de Instala\u00e7\u00e3o do .NET Bem-vindo ao guia de instala\u00e7\u00e3o do .NET. Escolha o sistema operacional que voc\u00ea est\u00e1 utilizando para prosseguir com as instru\u00e7\u00f5es espec\u00edficas de instala\u00e7\u00e3o: Instala\u00e7\u00e3o no Windows : Siga este guia se voc\u00ea estiver utilizando o Windows. Instala\u00e7\u00e3o no macOS : Siga este guia se voc\u00ea estiver utilizando um Mac. Instala\u00e7\u00e3o no Linux : Siga este guia se voc\u00ea estiver utilizando uma distribui\u00e7\u00e3o Linux. Cada guia cont\u00e9m instru\u00e7\u00f5es detalhadas para configurar seu ambiente de desenvolvimento com .NET no sistema operacional escolhido. Se voc\u00ea n\u00e3o tem certeza de qual sistema operacional est\u00e1 usando, consulte a documenta\u00e7\u00e3o do seu dispositivo ou entre em contato com o suporte t\u00e9cnico.","title":"Guia de Instala\u00e7\u00e3o do .NET"},{"location":"instalacao/base/#guia-de-instalacao-do-net","text":"Bem-vindo ao guia de instala\u00e7\u00e3o do .NET. Escolha o sistema operacional que voc\u00ea est\u00e1 utilizando para prosseguir com as instru\u00e7\u00f5es espec\u00edficas de instala\u00e7\u00e3o: Instala\u00e7\u00e3o no Windows : Siga este guia se voc\u00ea estiver utilizando o Windows. Instala\u00e7\u00e3o no macOS : Siga este guia se voc\u00ea estiver utilizando um Mac. Instala\u00e7\u00e3o no Linux : Siga este guia se voc\u00ea estiver utilizando uma distribui\u00e7\u00e3o Linux. Cada guia cont\u00e9m instru\u00e7\u00f5es detalhadas para configurar seu ambiente de desenvolvimento com .NET no sistema operacional escolhido. Se voc\u00ea n\u00e3o tem certeza de qual sistema operacional est\u00e1 usando, consulte a documenta\u00e7\u00e3o do seu dispositivo ou entre em contato com o suporte t\u00e9cnico.","title":"Guia de Instala\u00e7\u00e3o do .NET"},{"location":"instalacao/instalacao-linux/","text":"Instala\u00e7\u00e3o do .NET no Linux Este guia ir\u00e1 te ajudar a instalar o .NET em distribui\u00e7\u00f5es Linux e configurar seu ambiente de desenvolvimento para criar aplica\u00e7\u00f5es com .NET. 1. Requisitos de Sistema Antes de come\u00e7ar, certifique-se de que seu sistema atende aos seguintes requisitos: Distribui\u00e7\u00f5es Suportadas: Ubuntu, Fedora, CentOS, entre outras. Espa\u00e7o em Disco: Pelo menos 2 GB de espa\u00e7o livre Mem\u00f3ria: M\u00ednimo de 2 GB de RAM (recomendado 4 GB ou mais) 2. Instalando o .NET SDK Instala\u00e7\u00e3o no Ubuntu Adicionar o reposit\u00f3rio Microsoft: Execute os seguintes comandos no Terminal: ```bash sudo apt-get update sudo apt-get install -y wget wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb sudo dpkg -i packages-microsoft-prod.deb","title":"Instala\u00e7\u00e3o do .NET no Linux"},{"location":"instalacao/instalacao-linux/#instalacao-do-net-no-linux","text":"Este guia ir\u00e1 te ajudar a instalar o .NET em distribui\u00e7\u00f5es Linux e configurar seu ambiente de desenvolvimento para criar aplica\u00e7\u00f5es com .NET.","title":"Instala\u00e7\u00e3o do .NET no Linux"},{"location":"instalacao/instalacao-linux/#1-requisitos-de-sistema","text":"Antes de come\u00e7ar, certifique-se de que seu sistema atende aos seguintes requisitos: Distribui\u00e7\u00f5es Suportadas: Ubuntu, Fedora, CentOS, entre outras. Espa\u00e7o em Disco: Pelo menos 2 GB de espa\u00e7o livre Mem\u00f3ria: M\u00ednimo de 2 GB de RAM (recomendado 4 GB ou mais)","title":"1. Requisitos de Sistema"},{"location":"instalacao/instalacao-linux/#2-instalando-o-net-sdk","text":"","title":"2. Instalando o .NET SDK"},{"location":"instalacao/instalacao-linux/#instalacao-no-ubuntu","text":"Adicionar o reposit\u00f3rio Microsoft: Execute os seguintes comandos no Terminal: ```bash sudo apt-get update sudo apt-get install -y wget wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb sudo dpkg -i packages-microsoft-prod.deb","title":"Instala\u00e7\u00e3o no Ubuntu"},{"location":"instalacao/instalacao-mac/","text":"Instala\u00e7\u00e3o do .NET no macOS Este guia ir\u00e1 te ajudar a instalar o .NET no macOS e configurar seu ambiente de desenvolvimento para criar aplica\u00e7\u00f5es com .NET. 1. Requisitos de Sistema Antes de come\u00e7ar, certifique-se de que seu sistema atende aos seguintes requisitos: Sistema Operacional: macOS 10.13 ou superior Espa\u00e7o em Disco: Pelo menos 2 GB de espa\u00e7o livre Mem\u00f3ria: M\u00ednimo de 2 GB de RAM (recomendado 4 GB ou mais) 2. Instalando o .NET SDK O .NET SDK \u00e9 necess\u00e1rio para desenvolver e rodar aplica\u00e7\u00f5es .NET. Siga os passos abaixo para instal\u00e1-lo: Baixar o Instalador: Acesse o site oficial do .NET e baixe o instalador para macOS. Executar o Instalador: Abra o arquivo .pkg baixado e siga as instru\u00e7\u00f5es na tela para completar a instala\u00e7\u00e3o. Verificar a Instala\u00e7\u00e3o: Abra o Terminal e digite: ```bash dotnet --version","title":"Instala\u00e7\u00e3o do .NET no macOS"},{"location":"instalacao/instalacao-mac/#instalacao-do-net-no-macos","text":"Este guia ir\u00e1 te ajudar a instalar o .NET no macOS e configurar seu ambiente de desenvolvimento para criar aplica\u00e7\u00f5es com .NET.","title":"Instala\u00e7\u00e3o do .NET no macOS"},{"location":"instalacao/instalacao-mac/#1-requisitos-de-sistema","text":"Antes de come\u00e7ar, certifique-se de que seu sistema atende aos seguintes requisitos: Sistema Operacional: macOS 10.13 ou superior Espa\u00e7o em Disco: Pelo menos 2 GB de espa\u00e7o livre Mem\u00f3ria: M\u00ednimo de 2 GB de RAM (recomendado 4 GB ou mais)","title":"1. Requisitos de Sistema"},{"location":"instalacao/instalacao-mac/#2-instalando-o-net-sdk","text":"O .NET SDK \u00e9 necess\u00e1rio para desenvolver e rodar aplica\u00e7\u00f5es .NET. Siga os passos abaixo para instal\u00e1-lo: Baixar o Instalador: Acesse o site oficial do .NET e baixe o instalador para macOS. Executar o Instalador: Abra o arquivo .pkg baixado e siga as instru\u00e7\u00f5es na tela para completar a instala\u00e7\u00e3o. Verificar a Instala\u00e7\u00e3o: Abra o Terminal e digite: ```bash dotnet --version","title":"2. Instalando o .NET SDK"},{"location":"instalacao/instalacao-windows/","text":"Instala\u00e7\u00e3o do .NET no Windows Este guia ir\u00e1 te ajudar a instalar o .NET no Windows e configurar seu ambiente de desenvolvimento para come\u00e7ar a criar aplica\u00e7\u00f5es com .NET. 1. Requisitos de Sistema Sistema Operacional: Windows 10 ou superior Espa\u00e7o em Disco: Pelo menos 2 GB de espa\u00e7o livre Mem\u00f3ria: M\u00ednimo de 2 GB de RAM (recomendado 4 GB ou mais) 2. Instalando o .NET SDK Baixar o Instalador: Acesse o site oficial do .NET e baixe o instalador do .NET SDK mais recente. Executar o Instalador: Abra o arquivo baixado e siga as instru\u00e7\u00f5es para completar a instala\u00e7\u00e3o. Verificar a Instala\u00e7\u00e3o: No Prompt de Comando ou PowerShell, digite: ```bash dotnet --version","title":"Instala\u00e7\u00e3o do .NET no Windows"},{"location":"instalacao/instalacao-windows/#instalacao-do-net-no-windows","text":"Este guia ir\u00e1 te ajudar a instalar o .NET no Windows e configurar seu ambiente de desenvolvimento para come\u00e7ar a criar aplica\u00e7\u00f5es com .NET.","title":"Instala\u00e7\u00e3o do .NET no Windows"},{"location":"instalacao/instalacao-windows/#1-requisitos-de-sistema","text":"Sistema Operacional: Windows 10 ou superior Espa\u00e7o em Disco: Pelo menos 2 GB de espa\u00e7o livre Mem\u00f3ria: M\u00ednimo de 2 GB de RAM (recomendado 4 GB ou mais)","title":"1. Requisitos de Sistema"},{"location":"instalacao/instalacao-windows/#2-instalando-o-net-sdk","text":"Baixar o Instalador: Acesse o site oficial do .NET e baixe o instalador do .NET SDK mais recente. Executar o Instalador: Abra o arquivo baixado e siga as instru\u00e7\u00f5es para completar a instala\u00e7\u00e3o. Verificar a Instala\u00e7\u00e3o: No Prompt de Comando ou PowerShell, digite: ```bash dotnet --version","title":"2. Instalando o .NET SDK"}]}